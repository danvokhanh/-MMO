{"version":3,"file":"get-video-id.umd.js","sources":["../src/youtube.js","../src/vimeo.js","../src/vine.js","../src/videopress.js","../src/microsoftstream.js","../src/tiktok.js","../src/dailymotion.js","../src/utils/get-src.js","../src/utils/sanitize-url.js","../src/utils/extract-google-redirection-url.js","../src/index.js"],"sourcesContent":["/**\n * Strip away any remaining parameters following `?` or `/` or '&' for YouTube shortcode strings.\n *\n * @note this function is not meant to work with url strings containing a protocol like https://\n * @param {String} shortcodeString - the parameter string\n * @returns {String}\n */\nfunction stripParameters(shortcodeString) {\n\t// Split parameters or split folder separator\n\tif (shortcodeString.includes('?')) {\n\t\tshortcodeString = shortcodeString.split('?')[0];\n\t}\n\n\tif (shortcodeString.includes('/')) {\n\t\tshortcodeString = shortcodeString.split('/')[0];\n\t}\n\n\tif (shortcodeString.includes('&')) {\n\t\tshortcodeString = shortcodeString.split('&')[0];\n\t}\n\n\treturn shortcodeString;\n}\n\n/**\n * Get the Youtube Video id.\n * @param {string} youtubeStr - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function youtube(youtubeString) {\n\tlet string_ = youtubeString;\n\n\t// Remove the '-nocookie' flag from youtube urls\n\tstring_ = string_.replace('-nocookie', '');\n\n\t// Remove time hash at the end of the string\n\tstring_ = string_.replace(/#t=.*$/, '');\n\n\t// Strip the leading protocol\n\tstring_ = string_.replace(/^https?:\\/\\//, '');\n\n\t// Shortcode\n\tconst shortcode = /youtube:\\/\\/|youtu\\.be\\/|y2u\\.be\\//g;\n\n\tif (shortcode.test(string_)) {\n\t\tconst shortcodeid = string_.split(shortcode)[1];\n\t\treturn stripParameters(shortcodeid);\n\t}\n\n\t// Shorts\n\tconst shortsUrl = /\\/shorts\\//g;\n\tif (shortsUrl.test(string_)) {\n\t\treturn stripParameters(string_.split(shortsUrl)[1]);\n\t}\n\n\t// V= or vi=\n\tconst parameterv = /v=|vi=/g;\n\n\tif (parameterv.test(string_)) {\n\t\tconst array = string_.split(parameterv);\n\t\treturn stripParameters(array[1].split('&')[0]);\n\t}\n\n\t// /v/ or /vi/ or /watch/\n\tconst inlinev = /\\/v\\/|\\/vi\\/|\\/watch\\//g;\n\n\tif (inlinev.test(string_)) {\n\t\tconst inlineid = string_.split(inlinev)[1];\n\t\treturn stripParameters(inlineid);\n\t}\n\n\t// Format an_webp\n\tconst parameterwebp = /\\/an_webp\\//g;\n\n\tif (parameterwebp.test(string_)) {\n\t\tconst webp = string_.split(parameterwebp)[1];\n\t\treturn stripParameters(webp);\n\t}\n\n\t// /e/\n\tconst eformat = /\\/e\\//g;\n\n\tif (eformat.test(string_)) {\n\t\tconst estring = string_.split(eformat)[1];\n\t\treturn stripParameters(estring);\n\t}\n\n\t// Embed\n\tconst embedreg = /\\/embed\\//g;\n\n\tif (embedreg.test(string_)) {\n\t\tconst embedid = string_.split(embedreg)[1];\n\t\treturn stripParameters(embedid);\n\t}\n\n\t// ignore /user/username pattern\n\tconst usernamereg = /\\/user\\/([a-zA-Z\\d]*)$/g;\n\n\tif (usernamereg.test(string_)) {\n\t\treturn undefined;\n\t}\n\n\t// User\n\tconst userreg = /\\/user\\/(?!.*videos)/g;\n\n\tif (userreg.test(string_)) {\n\t\tconst elements = string_.split('/');\n\t\treturn stripParameters(elements.pop());\n\t}\n\n\t// Attribution_link\n\tconst attrreg = /\\/attribution_link\\?.*v%3D([^%&]*)(%26|&|$)/;\n\n\tif (attrreg.test(string_)) {\n\t\treturn stripParameters(string_.match(attrreg)[1]);\n\t}\n\n\t// Live\n\tconst livereg = /\\/live\\//g;\n\n\tif (livereg.test(string_)) {\n\t\tconst liveid = string_.split(livereg)[1];\n\t\treturn stripParameters(liveid);\n\t}\n\n\treturn undefined;\n}\n","/**\n * Get the vimeo id.\n *\n * @param {String} vimeoString the url from which you want to extract the id\n * @returns {String|undefined}\n */\nexport default function vimeo(vimeoString) {\n\tlet string_ = vimeoString;\n\n\tif (string_.includes('#')) {\n\t\t[string_] = string_.split('#');\n\t}\n\n\tif (string_.includes('?') && !string_.includes('clip_id=')) {\n\t\t[string_] = string_.split('?');\n\t}\n\n\tlet id;\n\tlet array;\n\n\tconst event = /https?:\\/\\/vimeo\\.com\\/event\\/(\\d+)$/;\n\n\tconst eventMatches = event.exec(string_);\n\n\tif (eventMatches && eventMatches[1]) {\n\t\treturn eventMatches[1];\n\t}\n\n\tconst primary = /https?:\\/\\/vimeo\\.com\\/(\\d+)/;\n\n\tconst matches = primary.exec(string_);\n\tif (matches && matches[1]) {\n\t\treturn matches[1];\n\t}\n\n\tconst vimeoPipe = [\n\t\t'https?://player.vimeo.com/video/[0-9]+$',\n\t\t'https?://vimeo.com/channels',\n\t\t'groups',\n\t\t'album',\n\t].join('|');\n\n\tconst vimeoRegex = new RegExp(vimeoPipe, 'gim');\n\n\tif (vimeoRegex.test(string_)) {\n\t\tarray = string_.split('/');\n\t\tif (array && array.length > 0) {\n\t\t\tid = array.pop();\n\t\t}\n\t} else if (/clip_id=/gim.test(string_)) {\n\t\tarray = string_.split('clip_id=');\n\t\tif (array && array.length > 0) {\n\t\t\t[id] = array[1].split('&');\n\t\t}\n\t}\n\n\treturn id;\n}\n","/**\n * Get the vine id.\n * @param {string} string_ - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function vine(string_) {\n\tconst regex = /https:\\/\\/vine\\.co\\/v\\/([a-zA-Z\\d]*)\\/?/;\n\tconst matches = regex.exec(string_);\n\n\tif (matches && matches.length > 1) {\n\t\treturn matches[1];\n\t}\n\n\treturn undefined;\n}\n","/**\n * Get the VideoPress id.\n * @param {string} urlString - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function videopress(urlString) {\n\tlet idRegex;\n\n\tif (urlString.includes('embed')) {\n\t\tidRegex = /embed\\/(\\w{8})/;\n\t\treturn urlString.match(idRegex)[1];\n\t}\n\n\tidRegex = /\\/v\\/(\\w{8})/;\n\n\tconst matches = urlString.match(idRegex);\n\n\tif (matches && matches.length > 0) {\n\t\treturn matches[1];\n\t}\n\n\treturn undefined;\n}\n","/**\n * Get the Microsoft Stream id.\n * @param {string} urlString - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function microsoftStream(urlString) {\n\tconst regex = (urlString.includes('embed'))\n\t\t? /https:\\/\\/web\\.microsoftstream\\.com\\/embed\\/video\\/([a-zA-Z\\d-]*)\\/?/\n\t\t: /https:\\/\\/web\\.microsoftstream\\.com\\/video\\/([a-zA-Z\\d-]*)\\/?/;\n\tconst matches = regex.exec(urlString);\n\n\tif (matches && matches.length > 1) {\n\t\treturn matches[1];\n\t}\n\n\treturn undefined;\n}\n","/**\n * Get the tiktok id.\n * @param {string} urlString - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function tiktok(urlString) {\n\t// Parse basic url and embeds\n\tconst basicReg = /tiktok\\.com(.*)\\/video\\/(\\d+)/gm;\n\tconst basicParsed = basicReg.exec(urlString);\n\tif (basicParsed && basicParsed.length > 2) {\n\t\treturn basicParsed[2];\n\t}\n\n\treturn undefined;\n}\n","/**\n * Get the dailymotion id.\n * @param {string} urlString - the url from which you want to extract the id\n * @returns {string|undefined}\n */\nexport default function dailymotion(urlString) {\n\t// Parse basic url and embeds\n\tconst basicReg = /dailymotion\\.com(.*)(video)\\/([a-zA-Z\\d]+)/gm;\n\tconst basicParsed = basicReg.exec(urlString);\n\tif (basicParsed) {\n\t\treturn basicParsed[3];\n\t}\n\n\t// Parse shortlink\n\tconst shortRegex = /dai\\.ly\\/([a-zA-Z\\d]+)/gm;\n\tconst shortParsed = shortRegex.exec(urlString);\n\tif (shortParsed && shortParsed.length > 1) {\n\t\treturn shortParsed[1];\n\t}\n\n\t// Dynamic link\n\tconst dynamicRegex = /dailymotion\\.com(.*)video=([a-zA-Z\\d]+)/gm;\n\tconst dynamicParsed = dynamicRegex.exec(urlString);\n\tif (dynamicParsed && dynamicParsed.length > 2) {\n\t\treturn dynamicParsed[2];\n\t}\n\n\treturn undefined;\n}\n","\n/**\n * Get the value assigned to a \"src\" attribute in a string, or undefined.\n * @param {String} input\n * @returns {String|undefined}\n */\nexport default function getSrc(input) {\n\tif (typeof input !== 'string') {\n\t\tthrow new TypeError('getSrc expected a string');\n\t}\n\n\tconst srcRegEx = /src=\"(.*?)\"/gm;\n\tconst matches = srcRegEx.exec(input);\n\n\tif (matches && matches.length >= 2) {\n\t\treturn matches[1];\n\t}\n\n\treturn undefined;\n}\n","import getSrc from './get-src.js';\n\n/**\n * Prepare the URL by doing common cleanup operations common for all URL types.\n * @param {String} input\n * @returns {String}\n */\nexport default function sanitizeUrl(input) {\n\tif (typeof input !== 'string') {\n\t\tthrow new TypeError(`sanitizeUrl expected a string, got ${typeof input}`);\n\t}\n\n\tlet string_ = input;\n\n\tif (/<iframe/gi.test(string_)) {\n\t\tstring_ = getSrc(string_) || '';\n\t}\n\n\t// Remove surrounding whitespaces or linefeeds\n\tstring_ = string_.trim();\n\n\t// Remove any leading `www.`\n\tstring_ = string_.replace('/www.', '/');\n\n\treturn string_;\n}\n","/**\n * Extract the url query parameter from a Google redirect url.\n *\n * @example\n * ```javascript\n * const url = extractGoogleRedirectionUrl('https://www.google.cz/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0ahUKEwj30L2MvpDVAhUFZVAKHb8CBaYQuAIIIjAA&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DdQw4w9WgXcQ')\n * // => 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'\n * ```\n * @param {String} input\n * @returns {String}\n */\nexport default function extractGoogleRedirectionUrl(input) {\n\tif (typeof input !== 'string') {\n\t\tthrow new TypeError(`extractGoogleRedirectionUrl expected a string, got ${typeof input}`);\n\t}\n\n\tconst string_ = input.trim();\n\n\t// Try to handle google redirection uri\n\tif (/\\/\\/google|www\\.google/.test(string_)) {\n\t\ttry {\n\t\t\tconst urlObject = new URL(input);\n\n\t\t\tconst parameters = new URLSearchParams(urlObject.search);\n\t\t\tconst extractedUrl = parameters.get('url');\n\n\t\t\tif (extractedUrl) {\n\t\t\t\treturn decodeURIComponent(extractedUrl);\n\t\t\t}\n\t\t} catch {\n\t\t\t// If there's an error (e.g., input is not a valid URL), return the trimmed input\n\t\t\treturn string_;\n\t\t}\n\t}\n\n\treturn string_;\n}\n\n","import youtube from './youtube.js';\nimport vimeo from './vimeo.js';\nimport vine from './vine.js';\nimport videopress from './videopress.js';\nimport microsoftStream from './microsoftstream.js';\nimport tiktok from './tiktok.js';\nimport dailymotion from './dailymotion.js';\nimport sanitizeUrl from './utils/sanitize-url.js';\nimport extractGoogleRedirectionUrl from './utils/extract-google-redirection-url.js';\n\n/**\n * Get the id and service from a video url.\n * @param {String} urlString - the url from which you want to extract the id\n * @returns {Object}\n */\nfunction getVideoId(urlString) {\n\tif (typeof urlString !== 'string') {\n\t\tthrow new TypeError('get-video-id expects a string');\n\t}\n\n\tconst string_ = sanitizeUrl(urlString);\n\tconst url = extractGoogleRedirectionUrl(string_);\n\n\tlet metadata = {\n\t\tid: null,\n\t\tservice: null,\n\t};\n\n\tif (/youtube|youtu\\.be|y2u\\.be|i.ytimg\\./.test(url)) {\n\t\tmetadata = {\n\t\t\tid: youtube(url),\n\t\t\tservice: 'youtube',\n\t\t};\n\t} else if (/vimeo/.test(url)) {\n\t\tmetadata = {\n\t\t\tid: vimeo(url),\n\t\t\tservice: 'vimeo',\n\t\t};\n\t} else if (/vine/.test(url)) {\n\t\tmetadata = {\n\t\t\tid: vine(url),\n\t\t\tservice: 'vine',\n\t\t};\n\t} else if (/videopress/.test(url)) {\n\t\tmetadata = {\n\t\t\tid: videopress(url),\n\t\t\tservice: 'videopress',\n\t\t};\n\t} else if (/microsoftstream/.test(url)) {\n\t\tmetadata = {\n\t\t\tid: microsoftStream(url),\n\t\t\tservice: 'microsoftstream',\n\t\t};\n\t} else if (/tiktok\\.com/.test(url)) {\n\t\tmetadata = {\n\t\t\tid: tiktok(url),\n\t\t\tservice: 'tiktok',\n\t\t};\n\t} else if (/(dailymotion\\.com|dai\\.ly)/.test(url)) {\n\t\tmetadata = {\n\t\t\tid: dailymotion(url),\n\t\t\tservice: 'dailymotion',\n\t\t};\n\t}\n\n\treturn metadata;\n}\n\nexport default getVideoId;\n"],"names":["stripParameters","shortcodeString","includes","split","youtube","youtubeString","string_","replace","shortcode","test","shortcodeid","shortsUrl","parameterv","array","inlinev","inlineid","parameterwebp","webp","eformat","estring","embedreg","embedid","usernamereg","undefined","userreg","elements","pop","attrreg","match","livereg","liveid","vimeo","vimeoString","id","event","eventMatches","exec","primary","matches","vimeoPipe","join","vimeoRegex","RegExp","length","vine","regex","videopress","urlString","idRegex","microsoftStream","tiktok","basicReg","basicParsed","dailymotion","shortRegex","shortParsed","dynamicRegex","dynamicParsed","getSrc","input","TypeError","srcRegEx","sanitizeUrl","trim","extractGoogleRedirectionUrl","urlObject","URL","parameters","URLSearchParams","search","extractedUrl","get","decodeURIComponent","getVideoId","url","metadata","service"],"mappings":"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"}